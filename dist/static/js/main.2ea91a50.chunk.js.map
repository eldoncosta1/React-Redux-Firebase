{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SingnUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebaseReducer","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","not","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","ownProps","firestoreReducer","ordered","notification","firestoreConnect","collection","orderBy","limit","console","log","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","authReducer","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","firebase","firestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","undefined","action","message","projectReducer","rootReducer","combineReducers","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseStateName","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAuBeA,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECFZ,SAACA,EAAUE,EAAXC,IAEcC,EAFyBD,EAAjBC,eAIhBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAAEO,KAAM,2BDCdR,CAhBO,SAACS,GACnB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMQ,QAAQC,cEA5EC,EATQ,WACnB,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCoBDf,cARS,SAACoB,GAErB,MAAO,CACHd,KAAMc,EAAMC,gBAAgBf,KAC5BW,QAASG,EAAMC,gBAAgBJ,UAIxBjB,CArBA,SAACS,GAAU,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACRK,EAAQhB,EAAKiB,IAAMb,EAAAC,EAAAC,cAACY,EAAD,CAAeP,QAASA,IAAcP,EAAAC,EAAAC,cAACa,EAAD,MAC/D,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAG,IAAIF,UAAU,cAAvB,aACES,uBCgBHK,EA1BO,SAAClB,GAAU,IACrBmB,EAAkBnB,EAAlBmB,cACR,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACRe,GAAiBA,EAAcC,IAAI,SAAAC,GACjC,OACIpB,EAAAC,EAAAC,cAAA,MAAImB,IAAKD,EAAIE,IACTtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaiB,EAAIG,KAAjC,KACAvB,EAAAC,EAAAC,cAAA,YAAOkB,EAAII,SACXxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVsB,IAAOL,EAAIM,KAAKC,UAAUC,mBCFpDC,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc4B,EAAQC,OACtChC,EAAAC,EAAAC,cAAA,sBAAc6B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDlC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAasB,IAAOM,EAAQI,UAAUR,UAAUS,eCU9DC,EAfK,SAAAP,GAAgB,IAAdQ,EAAcR,EAAdQ,SAElB,OACItC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACTmC,GAAYA,EAASnB,IAAI,SAAAY,GACvB,OACI/B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAE,YAAAkC,OAAcR,EAAQT,IAAMD,IAAKU,EAAQT,IAC7CtB,EAAAC,EAAAC,cAACsC,EAAD,CAAgBT,QAASA,EAASV,IAAKU,EAAQT,mCCHjEmB,mLACO,IAAAC,EACqCC,KAAK5C,MAAvCuC,EADHI,EACGJ,SAAU1C,EADb8C,EACa9C,KAAMsB,EADnBwB,EACmBxB,cAExB,OAAKtB,EAAKiB,IAGNb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAaN,SAAUA,KAE3BtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAe3B,cAAeA,OATxBlB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,mBAJnB0C,aA8BTC,cACX1D,YAVoB,SAACoB,EAAOuC,GAE5B,MAAO,CACHX,SAAU5B,EAAMwC,iBAAiBC,QAAQb,SACzC1C,KAAMc,EAAMC,gBAAgBf,KAC5BsB,cAAeR,EAAMwC,iBAAiBC,QAAQC,gBAMlDC,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,eAAgBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJnDP,CAMbP,GCIaO,cACX1D,YAboB,SAACoB,EAAOuC,GAC5BQ,QAAQC,IAAIhD,GACZ,IAAMY,EAAK2B,EAASU,MAAMC,OAAOtC,GAC3BgB,EAAW5B,EAAMwC,iBAAiBW,KAAKvB,SAE7C,MAAO,CACHP,QAFYO,EAAWA,EAAShB,GAAM,KAGtC1B,KAAMc,EAAMC,gBAAgBf,QAOhCyD,2BAAiB,CAAC,CACdC,WAAY,cAHLN,CAzCO,SAACjD,GAAU,IAErBgC,EAAkBhC,EAAlBgC,QAER,OAF0BhC,EAATH,KAEPiB,IAENkB,EAEI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAe4B,EAAQC,OACvChC,EAAAC,EAAAC,cAAA,SAAK6B,EAAQP,UAEjBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAiB6B,EAAQE,gBAAzB,IAA2CF,EAAQG,gBACnDlC,EAAAC,EAAAC,cAAA,WAAMuB,IAAOM,EAAQI,UAAUR,UAAUS,eAO5DpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,gCApBkBF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,sBCJ1ByD,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAvB,KAAAmB,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAvB,MAAAqB,EAAAE,OAAAS,EAAA,EAAAT,CAAAJ,IAAAc,KAAAC,MAAAb,EAAA,CAAArB,MAAAJ,OAAAgC,MAEI7D,MAAQ,CACJoE,MAAO,GACPC,SAAU,IAJlBd,EAOIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACKe,EAAEG,OAAO9D,GAAK2D,EAAEG,OAAOC,SATpCpB,EAaIqB,aAAe,SAACL,GACZA,EAAEM,iBACFtB,EAAKlE,MAAMyF,OAAOvB,EAAKvD,QAf/BuD,EAAA,OAAAC,OAAAuB,EAAA,EAAAvB,CAAAJ,EAAAC,GAAAG,OAAAwB,EAAA,EAAAxB,CAAAJ,EAAA,EAAAzC,IAAA,SAAAgE,MAAA,WAkBa,IAAA3C,EACuBC,KAAK5C,MAAzB4F,EADHjD,EACGiD,UAER,OAHKjD,EACc9C,KAEViB,IAAYb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,MAG9BL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0F,SAAUjD,KAAK2C,aAAcnF,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,SAAf,SACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,QAAQwE,SAAUnD,KAAKqC,gBAEjDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,YAAf,YACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWwB,GAAG,WAAWwE,SAAUnD,KAAKqC,gBAExDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTwF,EAAY3F,EAAAC,EAAAC,cAAA,SAAIyF,GAAiB,cAvCnE7B,EAAA,CAA4Bf,aA+DbzD,cAbS,SAACoB,GACrB,MAAO,CACHiF,UAAWjF,EAAMqF,YAAYJ,UAC7B/F,KAAMc,EAAMC,gBAAgBf,OAIT,SAACL,GACxB,MAAO,CACHiG,OAAQ,SAACQ,GAAD,OAAWzG,GRlEJ0G,EQkEoBD,ERjEhC,SAACzG,EAAUE,EAAXqC,IACcnC,EADyBmC,EAAjBnC,eAGhBC,OAAOsG,2BACZD,EAAYnB,MACZmB,EAAYlB,UACdlF,KAAK,WACHN,EAAS,CAAEO,KAAM,oBAClBqG,MAAM,SAACC,GACN7G,EAAS,CAAEO,KAAM,cAAesG,aAVtB,IAACH,KQsER3G,CAA6CwE,GC/D/CuC,EAAb,SAAAtC,GAAA,SAAAsC,IAAA,IAAArC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAvB,KAAA0D,GAAA,QAAAjC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAvB,MAAAqB,EAAAE,OAAAS,EAAA,EAAAT,CAAAmC,IAAAzB,KAAAC,MAAAb,EAAA,CAAArB,MAAAJ,OAAAgC,MAEI7D,MAAQ,CACJoE,MAAO,GACPC,SAAU,GACVuB,UAAW,GACXC,SAAU,IANlBtC,EASIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACKe,EAAEG,OAAO9D,GAAK2D,EAAEG,OAAOC,SAXpCpB,EAeIqB,aAAe,SAACL,GACZA,EAAEM,iBACFtB,EAAKlE,MAAMyG,OAAOvC,EAAKvD,QAjB/BuD,EAAA,OAAAC,OAAAuB,EAAA,EAAAvB,CAAAmC,EAAAtC,GAAAG,OAAAwB,EAAA,EAAAxB,CAAAmC,EAAA,EAAAhF,IAAA,SAAAgE,MAAA,WAoBa,IAAA3C,EACuBC,KAAK5C,MAAzBH,EADH8C,EACG9C,KAAM+F,EADTjD,EACSiD,UAEd,OAAI/F,EAAKiB,IAAYb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,MAG9BL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0F,SAAUjD,KAAK2C,aAAcnF,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,SAAf,SACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,QAAQwE,SAAUnD,KAAKqC,gBAEjDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,YAAf,YACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWwB,GAAG,WAAWwE,SAAUnD,KAAKqC,gBAExDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,aAAf,cACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,YAAYwE,SAAUnD,KAAKqC,gBAErDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,YAAf,aACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,WAAWwE,SAAUnD,KAAKqC,gBAEpDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACTwF,EAAY3F,EAAAC,EAAAC,cAAA,SAAIyF,GAAiB,cAjDnEU,EAAA,CAA4BtD,aA4EbzD,cAhBS,SAACoB,GAErB,OADA+C,QAAQC,IAAIhD,GACL,CACHd,KAAMc,EAAMC,gBAAgBf,KAC5B+F,UAAWjF,EAAMqF,YAAYJ,YAKV,SAACpG,GAExB,MAAO,CACHiH,OAAQ,SAACC,GAAD,OAAalH,ETpDP,SAACkH,GACnB,OAAO,SAAClH,EAAUE,EAAXiH,GAAqD,IAA/B/G,EAA+B+G,EAA/B/G,YAAagH,EAAkBD,EAAlBC,aAChCC,EAAWjH,IACXkH,EAAYF,IAElBC,EAAShH,OAAOkH,+BACZL,EAAQ3B,MACR2B,EAAQ1B,UACVlF,KAAK,SAACkH,GACJ,OAAOF,EAAUvD,WAAW,SAAS0D,IAAID,EAAKxF,KAAKV,KAAKoG,IAAI,CACxDX,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB/F,SAAQ,GAAA+B,OAAKkE,EAAQH,UAAU,IAAvB/D,OAA4BkE,EAAQF,SAAS,QAE1D1G,KAAK,WACJN,EAAS,CAAEO,KAAM,qBAClBqG,MAAM,SAAAC,GACL7G,EAAS,CAAEO,KAAM,eAAgBsG,WSmCPI,CAAOC,OAI9BnH,CAA6C+G,WC5E/Ca,EAAb,SAAAnD,GAAA,SAAAmD,IAAA,IAAAlD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAvB,KAAAuE,GAAA,QAAA9C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAC,OAAAQ,EAAA,EAAAR,CAAAvB,MAAAqB,EAAAE,OAAAS,EAAA,EAAAT,CAAAgD,IAAAtC,KAAAC,MAAAb,EAAA,CAAArB,MAAAJ,OAAAgC,MAEI7D,MAAQ,CACJsB,MAAO,GACPR,QAAS,IAJjByC,EAOIe,aAAe,SAACC,GACZhB,EAAKiB,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACKe,EAAEG,OAAO9D,GAAK2D,EAAEG,OAAOC,SATpCpB,EAaIqB,aAAe,SAACL,GACZA,EAAEM,iBACFtB,EAAKlE,MAAMoH,cAAclD,EAAKvD,OAC9BuD,EAAKlE,MAAMqH,QAAQC,KAAK,MAhBhCpD,EAAA,OAAAC,OAAAuB,EAAA,EAAAvB,CAAAgD,EAAAnD,GAAAG,OAAAwB,EAAA,EAAAxB,CAAAgD,EAAA,EAAA7F,IAAA,SAAAgE,MAAA,WAuBQ,OAFiB1C,KAAK5C,MAAdH,KAEEiB,IAGNb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0F,SAAUjD,KAAK2C,aAAcnF,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,SAAf,SACA7F,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,QAAQwE,SAAUnD,KAAKqC,gBAEjDhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAAQ,WAAf,mBACA7F,EAAAC,EAAAC,cAAA,YAAUoB,GAAG,UAAUnB,UAAU,uBAAuB2F,SAAUnD,KAAKqC,gBAE3EhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,cAhBEH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUzC,GAAG,gBAvB3C6G,EAAA,CAAmCnE,aA8DpBzD,cAbS,SAACoB,EAAOuC,GAC5B,MAAO,CACHrD,KAAMc,EAAMC,gBAAgBf,OAIT,SAACL,GACxB,MAAO,CACH4H,cAAe,SAACpF,GAAD,OAAaxC,EChEP,SAACwC,GAC1B,OAAO,SAACxC,EAAUE,EAAXqC,GAAuDA,EAAhCnC,YAAgC,IAEpDkH,GAAYF,EAFwC7E,EAAnB6E,gBAGjCpG,EAAUd,IAAWkB,gBAAgBJ,QACrC+G,EAAW7H,IAAWkB,gBAAgBf,KAAKiB,IAEjDgG,EAAUvD,WAAW,YAAYiE,IAAjCrD,OAAAsD,EAAA,EAAAtD,CAAA,GACOnC,EADP,CAEIE,gBAAiB1B,EAAQ+F,UACzBpE,eAAgB3B,EAAQgG,SACxBe,SAAUA,EACVnF,UAAW,IAAIsF,QAChB5H,KAAK,WACJN,EAAS,CAAEO,KAAM,iBAAkBiC,cACpCoE,MAAM,SAACC,GACN7G,EAAS,CAAEO,KAAM,uBAAwBsG,WDgDRe,CAAcpF,OAK5CzC,CAA6C4H,GEzC7CQ,mLAjBX,OACE1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0H,EAAD,MACA5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxF,IACjCzC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWC,IACtClI,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWnE,IACjC9D,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW5B,IACjCrG,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,cAX3BnE,aCGEoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3E,MACvB,2DClBN,IAAM4E,EAAY,CACd5C,UAAW,MAwCAI,EArCK,WAA+B,IAA9BrF,EAA8B2D,UAAAC,OAAA,QAAAkE,IAAAnE,UAAA,GAAAA,UAAA,GAAtBkE,EAAWE,EAAWpE,UAAAC,OAAA,EAAAD,UAAA,QAAAmE,EAE/C,OAAQC,EAAO3I,MAEX,IAAK,gBAED,OADA2D,QAAQC,IAAI,iBAAkB+E,GACvBvE,OAAAsD,EAAA,EAAAtD,CAAA,GACAxD,EADP,CAEIiF,UAAW,OAEnB,IAAK,cAED,OADAlC,QAAQC,IAAI,eAAgB+E,EAAOrC,KAC5BlC,OAAAsD,EAAA,EAAAtD,CAAA,GACAxD,EADP,CAEIiF,UAAW,iBAEnB,IAAK,kBAED,OADAlC,QAAQC,IAAI,oBACLhD,EACX,IAAK,iBAED,OADA+C,QAAQC,IAAI,kBACLQ,OAAAsD,EAAA,EAAAtD,CAAA,GACAxD,EADP,CAEIiF,UAAW,OAEnB,IAAK,eAED,OADAlC,QAAQC,IAAI,gBACLQ,OAAAsD,EAAA,EAAAtD,CAAA,GACAxD,EADP,CAEIiF,UAAW8C,EAAOrC,IAAIsC,UAE9B,QACI,OAAOhI,ICpCb6H,EAAY,CACdjG,SAAU,CACN,CAAChB,GAAI,IAAKU,MAAO,qBAAsBR,QAAS,kBAChD,CAACF,GAAI,IAAKU,MAAO,wBAAyBR,QAAS,kBACnD,CAACF,GAAI,IAAKU,MAAO,sBAAuBR,QAAS,oBAoB1CmH,EAhBQ,WAA+B,IAA9BjI,EAA8B2D,UAAAC,OAAA,QAAAkE,IAAAnE,UAAA,GAAAA,UAAA,GAAtBkE,EAAWE,EAAWpE,UAAAC,OAAA,EAAAD,UAAA,QAAAmE,EAElD,OAAQC,EAAO3I,MAEX,IAAK,iBAED,OADA2D,QAAQC,IAAI,mBAAoB+E,EAAO1G,SAChCrB,EACX,IAAK,uBAED,OADA+C,QAAQC,IAAI,wBAAyB+E,EAAOrC,KACrC1F,EACX,QACI,OAAOA,YCNJkI,EAPKC,YAAgB,CAChC9C,cACA4C,iBACAzF,oCACAvC,4ECIJiG,IAASkC,cATI,CACTC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBAIvBxC,IAASC,YAAYwC,SAAS,CAAEC,uBAAuB,IAExC1C,QAAf,ECJM2C,EAAQC,YAAYZ,EACtB5F,YACIyG,YAAgBC,IAAMC,kBAAkB,CAAEhK,0BAAagH,+BACvDiD,yBAAeC,GACfC,6BAAmBD,EAAU,CACzBE,wBAAwB,EACxBC,YAAa,QACbC,mBAAoB,EACpBC,kBAAmB,sBAK/BX,EAAMY,oBAAoBtK,KAAK,WAC3BuK,IAASC,OACLrK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAUf,MAAOA,GACbvJ,EAAAC,EAAAC,cAACqK,EAAD,OAEJC,SAASC,eAAe,WLkG1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/K,KAAK,SAAAgL,GACjCA,EAAaC","file":"static/js/main.2ea91a50.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    signOut\r\n} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: `${newUser.firstName[0]}${newUser.lastName[0]}`\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;   \r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { links }                \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        auth: state.firebaseReducer.auth,\r\n        profile: state.firebaseReducer.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(not => {\r\n                            return (\r\n                                <li key={not.id}>\r\n                                    <span className=\"pink-text\">{not.user} </span>\r\n                                    <span>{not.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(not.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    \r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={`/project/${project.id}`} key={project.id}>\r\n                        <ProjectSummary project={project} key={project.id} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect  } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {    \r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        \r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state)\r\n    return {\r\n        projects: state.firestoreReducer.ordered.projects,\r\n        auth: state.firebaseReducer.auth,\r\n        notifications: state.firestoreReducer.ordered.notification\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notification', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect  } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetail = (props) => {\r\n\r\n    const { project, auth } = props;\r\n    \r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName} {project.authorLastName }</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n     <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n     </div>   \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state)\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestoreReducer.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project,\r\n        auth: state.firebaseReducer.auth\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ \r\n        collection: 'projects' \r\n    }])\r\n)(ProjectDetail)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    signIn\r\n} from '../../store/actions/authActions'\r\nimport { Redirect  } from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }       \r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        \r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                            <div className=\"red-text center\">\r\n                                { authError ? <p>{authError}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.authReducer.authError,\r\n        auth: state.firebaseReducer.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect  } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    signUp\r\n} from '../../store/actions/authActions'\r\n\r\nexport class SignUp extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {        \r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);        \r\n    }\r\n       \r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        \r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                        </div>                        \r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"lastName\">Last Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                            <div className=\"red-text center\">\r\n                                { authError ? <p>{authError}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebaseReducer.auth,\r\n        authError: state.authReducer.authError\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n    createProject\r\n} from '../../store/actions/projectActions'\r\nimport { Redirect  } from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }       \r\n\r\n    render() {\r\n\r\n        const { auth } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"content\">Project Content</label>\r\n                            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {    \r\n    return {        \r\n        auth: state.firebaseReducer.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebaseReducer.profile;\r\n        const authorId = getState().firebaseReducer.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetail'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SingnUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success ', action);\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error ', action.err);\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success ')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) {\r\n\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project ', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error ', action.err)\r\n            return state;\r\n        default:\r\n            return state;        \r\n    }    \r\n\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer,\r\n    projectReducer,\r\n    firestoreReducer,\r\n    firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCvzjjPPsT6LqaQ2wFfm9yHjKmVdvctmQ0\",\r\n    authDomain: \"marioplan-606a7.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-606a7.firebaseio.com\",\r\n    projectId: \"marioplan-606a7\",\r\n    storageBucket: \"marioplan-606a7.appspot.com\",\r\n    messagingSenderId: \"625488396032\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true});\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {\n            useFirestoreForProfile: true, \n            userProfile: 'users',\n            attachAuthIsReady : true, \n            firebaseStateName: 'firebaseReducer'  \n        })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, \n        document.getElementById('root'));\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}